version: '3'

services:
  # Frontend (Nginx) service
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # Redis service 
  redis:
    image: redis:alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - redis-data:/data
      - redis-logs:/var/log/redis
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # MySQL DB
  db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=messages_db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "user", "-ppassword"]
      interval: 5s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # Backend on Python
  backend:
    build: ./backend
    environment:
      - DB_HOST=db
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=messages_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      # - REDIS_PASSWORD=yourStrongPassword  # Uncomment if you want to set a password in redis. Don't forget to change conf file
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
  redis-data:
  redis-logs:
